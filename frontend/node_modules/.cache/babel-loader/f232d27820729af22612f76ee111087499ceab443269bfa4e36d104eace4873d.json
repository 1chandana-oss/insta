{"ast":null,"code":"// import React, { useEffect, useState } from 'react'\n// import './Home.css';\n// import {  toast } from 'react-toastify';\n// import { useNavigate } from 'react-router-dom';\n// import { Link } from 'react-router-dom';\n// const Home = () => {\n//   var profileLink=\"https://cdn-icons-png.flaticon.com/128/64/64572.png\"\n//   const navigate = useNavigate();\n//   const [data, setData] = useState([]);\n//   const [comment, setComment] = useState(\" \")\n//   const [show,setShow] =useState(false);\n//   const [item, setItem] = useState([])\n//   const [posts, setPosts] = useState()\n//   const notifya=(msg)=>toast.error(msg)\n//   const notifyb=(msg)=>toast.success(msg)\n//   const toggleComment=(posts)=>{\n//     if(show){\n//       setShow(false);\n//     }else{\n//       setShow(true);\n//       setItem(posts)\n//     }\n//   }\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"jwt\");\n//     if (!token) {\n//       navigate(\"/signup\")\n//     }\n//     //  fetching all post\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/allposts`, {\n//       headers: {\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n//       },\n//     }).then(res => res.json())\n//     .then((result)=>{\n//       console.log(\"API Response:\", data);\n//       console.log(result)\n//       setData(data)\n//     })\n//       .catch(err => console.log(err))\n//   }, [])\n//   const likepost = (id) => {\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/like/${id}`, {\n//       method: \"put\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n//       },\n//       body: JSON.stringify({\n//         postId: id\n//       })\n//     }).then(res => res.json())\n//       .then((result) => {\n//         const newdata = data.map((posts) => {\n//           if (posts._id == result._id) {\n//             return result\n//           } else {\n//             return posts\n//           }\n//         })\n//         setData(newdata)\n//         console.log(result)\n//       })\n//   }\n//   const unlikepost = (id) => {\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/unlike/${id}`, {\n//       method: \"put\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n//       },\n//       body: JSON.stringify({\n//         postId: id\n//       })\n//     }).then(res => res.json())\n//       .then((result) => {\n//         const newdata = data.map((posts) => {\n//           if (posts._id == result._id) {\n//             return result\n//           } else {\n//             return posts\n//           }\n//         })\n//         setData(newdata)\n//         console.log(result)\n//       })\n//   }\n//   const makeComment = (text, id) => {\n//     // console.log(comment)\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/comment/${id}`, {\n//       method: \"put\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n//       },\n//       body: JSON.stringify({\n//         postId: id,\n//         text: text,\n//       })\n//     }).then(res => res.json())\n//       .then((result) => {\n//          const newdata = data.map((posts) => {\n//           if (posts._id == result._id) {\n//             return result\n//           } else {\n//             return posts\n//           }\n//         })\n//         setData(newdata)\n//         setComment(\" \")\n//         notifyb(\"suuccesfully commented\")\n//         console.log(result)\n//       })\n//   }\n//   return (\n//     <div className=\"home\">\n//       {data.map((posts) => {\n//         // console.log(posts)\n//         return (\n//           <div className=\"card\">\n//             <div className=\"card-header\">\n//               <div className=\"card-pic\">\n//                 <img src={posts.photo ?posts.postedBy.photo:\"profileLink\"} alt=\" \" />\n//                 <h5>\n//                   <Link to={`/profile/${posts.postedBy._id}`}>\n//                   {posts.postedBy.name}\n//                   </Link>\n//                   </h5>\n//               </div>\n//             </div>\n//             <div className=\"card-image\">\n//               <img src={posts.photo} alt=\"\" />\n//             </div>\n//             {\n//               posts.likes.includes(JSON.parse(localStorage.getItem(\"user\"))._id)\n//                 ? (\n//                   <span className=\"material-symbols-outlined material-symbols-outlined -red\" onClick={() => { unlikepost(posts._id) }}>\n//                     favorite\n//                   </span>\n//                 ) : (<span className=\"material-symbols-outlined\" onClick={() => { likepost(posts._id) }}>\n//                   favorite\n//                 </span>)\n//             }\n//             <div className=\"card-content\">\n//               <p > {item.likes.length} like</p>\n//               <p>{posts.body}</p>\n//             </div>\n//             <div className=\"add-comment\">\n//               <span className=\"material-symbols-outlined\">\n//                 mood\n//               </span>\n//               <input type=\"text\" placeholder='Add a Comment' value={comment} onChange={(e) => { setComment(e.target.value) }} />\n//               <button className=\"comment\" onClick={() => { makeComment(comment, posts._id) }}>Post</button>\n//             </div>\n//           </div>\n//         )\n// })}\n//       {show && (\n//         <div className=\"showcomment\">\n//         <div className=\"container\">\n//           <div className=\"postpic\">\n//             <img src=\"\" alt=\"\" />\n//           </div>\n//           <div className=\"details\">\n//             {/* card-header */}\n//             <div className=\"card-header\" style={{ borderBottom: \"1px solid #00000029\" }}>\n//               <div className=\"card-pic\">\n//                 <img src={item.photo} alt=\" \" />\n//                 <h5>{item.postedBy.name}</h5>\n//               </div>\n//             </div>\n//             {/* comment-section */}\n//             <div className=\"commentsection\" style={{ borderBottom: \"1px solid #00000029\" }} >\n//               {\n//                 item.comments.map((comment)=>{\n//                 return  (<p className='comm'>\n//                 <span className=\"commenter\" style={{ fontWeight: \"bolder\" }} >{comment.postedBy}{\" \"}  </span>\n//                 <span className=\"commenttext\">{comment.comment}</span>\n//               </p>)\n//                 })\n//               }\n//             </div>\n//             {/* card content */}\n//             <div className=\"card-content\">\n//               <p >{posts.likes.length} likes</p>\n//               <p>{posts.body}</p>\n//               <p style={{fontWeight:\"bold\",cyrsor:\"pointer\"}}\n//               onClick={()=>{\n//                 toggleComment(posts);\n//               }}>\n//                 View all comments\n//               </p>\n//             </div>\n//             <div className=\"add-comment\">\n//               <span className=\"material-symbols-outlined\">\n//                 mood\n//               </span>\n//               <input type=\"text\" placeholder='Add a Comment' value={comment} onChange={(e) => { setComment(e.target.value) }} />\n//               <button className=\"comment\"\n//                onClick={()=>{makeComment(comment,item._id)\n//                 toggleComment();\n//                }}\n//               >Post</button>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"closecomment\" onClick={()=>{toggleComment(posts)}}>\n//           <span className=\"material-symbols-outlined material-symbols-outlined-comment\">\n//             close\n//           </span>\n//         </div>\n//       </div>\n//       )}\n//     </div>\n//   )\n// }\n// export default Home\nimport React,{useEffect,useState}from'react';import'./Home.css';import{toast}from'react-toastify';import{useNavigate,Link}from'react-router-dom';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_URL=process.env.REACT_APP_API_URL||\"http://localhost:5000\";const Home=()=>{var _JSON$parse;const navigate=useNavigate();const[data,setData]=useState([]);const[comment,setComment]=useState('');const[show,setShow]=useState(false);const[item,setItem]=useState(null);const notifya=msg=>toast.error(msg);const notifyb=msg=>toast.success(msg);const toggleComment=function(){let post=arguments.length>0&&arguments[0]!==undefined?arguments[0]:null;if(show){setShow(false);setItem(null);}else{setShow(true);setItem(post);}};// Fetch all posts\nuseEffect(()=>{const token=localStorage.getItem('jwt');if(!token){navigate('/signin');return;}const fetchPosts=async()=>{try{const res=await fetch(\"\".concat(API_URL,\"/posts/allposts\"),{headers:{Authorization:'Bearer '+token}});if(res.status===401){notifya('You must be logged in to see posts');navigate('/signin');return;}const result=await res.json();setData(result.posts||[]);console.log('API Response:',result);}catch(err){console.error(err);notifya('Failed to fetch posts');}};fetchPosts();},[]);const updatePostData=updatedPost=>{const newData=data.map(p=>p._id===updatedPost._id?updatedPost:p);setData(newData);if(item&&item._id===updatedPost._id){setItem(updatedPost);}};const likePost=async id=>{const token=localStorage.getItem('jwt');console.log(\"JWT Token:\",localStorage.getItem(\"jwt\"));try{const res=await fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/posts/like/\").concat(id),{method:'PUT',headers:{'Content-Type':'application/json',Authorization:'Bearer '+token},body:JSON.stringify({postId:id})});const result=await res.json();updatePostData(result);}catch(err){console.error(err);notifya('Failed to like post');}};const unlikePost=async id=>{const token=localStorage.getItem('jwt');try{const res=await fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/posts/unlike/\").concat(id),{method:'PUT',headers:{'Content-Type':'application/json',Authorization:'Bearer '+token},body:JSON.stringify({postId:id})});const result=await res.json();updatePostData(result);}catch(err){console.error(err);notifya('Failed to unlike post');}};const makeComment=async(text,id)=>{const token=localStorage.getItem('jwt');try{const res=await fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/posts/comment/\").concat(id),{method:'PUT',headers:{'Content-Type':'application/json',Authorization:'Bearer '+token},body:JSON.stringify({postId:id,text})});const result=await res.json();updatePostData(result);setComment('');notifyb('Comment added successfully');}catch(err){console.error(err);notifya('Failed to add comment');}};const userId=(_JSON$parse=JSON.parse(localStorage.getItem('user')))===null||_JSON$parse===void 0?void 0:_JSON$parse._id;return/*#__PURE__*/_jsxs(\"div\",{className:\"home\",children:[data.map(posts=>/*#__PURE__*/_jsxs(\"div\",{className:\"card\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-pic\",children:[/*#__PURE__*/_jsx(\"img\",{src:posts.postedBy.photo||'https://cdn-icons-png.flaticon.com/128/64/64572.png',alt:\"profile\"}),/*#__PURE__*/_jsx(\"h5\",{children:/*#__PURE__*/_jsx(Link,{to:\"/profile/\".concat(posts.postedBy._id),children:posts.postedBy.name})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"card-image\",children:/*#__PURE__*/_jsx(\"img\",{src:posts.photo,alt:\"\"})}),posts.likes.includes(userId)?/*#__PURE__*/_jsx(\"span\",{className:\"material-symbols-outlined material-symbols-outlined -red\",onClick:()=>unlikePost(posts._id),children:\"favorite\"}):/*#__PURE__*/_jsx(\"span\",{className:\"material-symbols-outlined\",onClick:()=>likePost(posts._id),children:\"favorite\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[posts.likes.length,\" likes\"]}),/*#__PURE__*/_jsx(\"p\",{children:posts.body})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-comment\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"material-symbols-outlined\",children:\"mood\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Add a Comment\",value:comment,onChange:e=>setComment(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"comment\",onClick:()=>makeComment(comment,posts._id),children:\"Post\"})]})]},posts._id)),show&&item&&/*#__PURE__*/_jsx(\"div\",{className:\"showcomment\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"postpic\",children:/*#__PURE__*/_jsx(\"img\",{src:item.photo,alt:\"\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"details\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"card-header\",style:{borderBottom:'1px solid #00000029'},children:/*#__PURE__*/_jsxs(\"div\",{className:\"card-pic\",children:[/*#__PURE__*/_jsx(\"img\",{src:item.postedBy.photo||'https://cdn-icons-png.flaticon.com/128/64/64572.png',alt:\"profile\"}),/*#__PURE__*/_jsx(\"h5\",{children:item.postedBy.name})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"commentsection\",style:{borderBottom:'1px solid #00000029'},children:item.comments.map((comment,idx)=>/*#__PURE__*/_jsxs(\"p\",{className:\"comm\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"commenter\",style:{fontWeight:'bolder'},children:[comment.postedBy.name||comment.postedBy,' ']}),/*#__PURE__*/_jsx(\"span\",{className:\"commenttext\",children:comment.comment})]},idx))}),/*#__PURE__*/_jsxs(\"div\",{className:\"card-content\",children:[/*#__PURE__*/_jsxs(\"p\",{children:[item.likes.length,\" likes\"]}),/*#__PURE__*/_jsx(\"p\",{children:item.body}),/*#__PURE__*/_jsx(\"p\",{style:{fontWeight:'bold',cursor:'pointer'},onClick:()=>{toggleComment();},children:\"Close comments\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"add-comment\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"material-symbols-outlined\",children:\"mood\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",placeholder:\"Add a Comment\",value:comment,onChange:e=>setComment(e.target.value)}),/*#__PURE__*/_jsx(\"button\",{className:\"comment\",onClick:()=>{makeComment(comment,item._id);setComment('');},children:\"Post\"})]})]})]})})]});};export default Home;","map":{"version":3,"names":["React","useEffect","useState","toast","useNavigate","Link","jsx","_jsx","jsxs","_jsxs","API_URL","process","env","REACT_APP_API_URL","Home","_JSON$parse","navigate","data","setData","comment","setComment","show","setShow","item","setItem","notifya","msg","error","notifyb","success","toggleComment","post","arguments","length","undefined","token","localStorage","getItem","fetchPosts","res","fetch","concat","headers","Authorization","status","result","json","posts","console","log","err","updatePostData","updatedPost","newData","map","p","_id","likePost","id","method","body","JSON","stringify","postId","unlikePost","makeComment","text","userId","parse","className","children","src","postedBy","photo","alt","to","name","likes","includes","onClick","type","placeholder","value","onChange","e","target","style","borderBottom","comments","idx","fontWeight","cursor"],"sources":["D:/fullstack_instagram/insta_clone/backend/frontend/src/components/Home.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\r\n// import './Home.css';\r\n// import {  toast } from 'react-toastify';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n// const Home = () => {\r\n//   var profileLink=\"https://cdn-icons-png.flaticon.com/128/64/64572.png\"\r\n//   const navigate = useNavigate();\r\n//   const [data, setData] = useState([]);\r\n//   const [comment, setComment] = useState(\" \")\r\n//   const [show,setShow] =useState(false);\r\n//   const [item, setItem] = useState([])\r\n//   const [posts, setPosts] = useState()\r\n//   const notifya=(msg)=>toast.error(msg)\r\n//   const notifyb=(msg)=>toast.success(msg)\r\n\r\n\r\n//   const toggleComment=(posts)=>{\r\n//     if(show){\r\n//       setShow(false);\r\n     \r\n//     }else{\r\n//       setShow(true);\r\n//       setItem(posts)\r\n     \r\n//     }\r\n//   }\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem(\"jwt\");\r\n//     if (!token) {\r\n//       navigate(\"/signup\")\r\n//     }\r\n  \r\n//     //  fetching all post\r\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/allposts`, {\r\n//       headers: {\r\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n//       },\r\n\r\n//     }).then(res => res.json())\r\n//     .then((result)=>{\r\n//       console.log(\"API Response:\", data);\r\n//       console.log(result)\r\n//       setData(data)\r\n//     })\r\n//       .catch(err => console.log(err))\r\n//   }, [])\r\n\r\n//   const likepost = (id) => {\r\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/like/${id}`, {\r\n//       method: \"put\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n//       },\r\n//       body: JSON.stringify({\r\n//         postId: id\r\n//       })\r\n//     }).then(res => res.json())\r\n//       .then((result) => {\r\n//         const newdata = data.map((posts) => {\r\n//           if (posts._id == result._id) {\r\n//             return result\r\n//           } else {\r\n//             return posts\r\n//           }\r\n//         })\r\n//         setData(newdata)\r\n//         console.log(result)\r\n//       })\r\n//   }\r\n\r\n//   const unlikepost = (id) => {\r\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/unlike/${id}`, {\r\n//       method: \"put\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n//       },\r\n//       body: JSON.stringify({\r\n//         postId: id\r\n//       })\r\n//     }).then(res => res.json())\r\n//       .then((result) => {\r\n//         const newdata = data.map((posts) => {\r\n//           if (posts._id == result._id) {\r\n//             return result\r\n//           } else {\r\n//             return posts\r\n//           }\r\n//         })\r\n//         setData(newdata)\r\n//         console.log(result)\r\n//       })\r\n//   }\r\n\r\n//   const makeComment = (text, id) => {\r\n//     // console.log(comment)\r\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/comment/${id}`, {\r\n//       method: \"put\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n//       },\r\n//       body: JSON.stringify({\r\n//         postId: id,\r\n//         text: text,\r\n//       })\r\n//     }).then(res => res.json())\r\n//       .then((result) => {\r\n//          const newdata = data.map((posts) => {\r\n//           if (posts._id == result._id) {\r\n//             return result\r\n//           } else {\r\n//             return posts\r\n//           }\r\n//         })\r\n//         setData(newdata)\r\n//         setComment(\" \")\r\n//         notifyb(\"suuccesfully commented\")\r\n//         console.log(result)\r\n//       })\r\n//   }\r\n//   return (\r\n//     <div className=\"home\">\r\n//       {data.map((posts) => {\r\n//         // console.log(posts)\r\n//         return (\r\n//           <div className=\"card\">\r\n//             <div className=\"card-header\">\r\n//               <div className=\"card-pic\">\r\n//                 <img src={posts.photo ?posts.postedBy.photo:\"profileLink\"} alt=\" \" />\r\n//                 <h5>\r\n//                   <Link to={`/profile/${posts.postedBy._id}`}>\r\n//                   {posts.postedBy.name}\r\n//                   </Link>\r\n//                   </h5>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"card-image\">\r\n//               <img src={posts.photo} alt=\"\" />\r\n//             </div>\r\n//             {\r\n//               posts.likes.includes(JSON.parse(localStorage.getItem(\"user\"))._id)\r\n//                 ? (\r\n//                   <span className=\"material-symbols-outlined material-symbols-outlined -red\" onClick={() => { unlikepost(posts._id) }}>\r\n//                     favorite\r\n//                   </span>\r\n//                 ) : (<span className=\"material-symbols-outlined\" onClick={() => { likepost(posts._id) }}>\r\n//                   favorite\r\n//                 </span>)\r\n//             }\r\n//             <div className=\"card-content\">\r\n//               <p > {item.likes.length} like</p>\r\n//               <p>{posts.body}</p>\r\n//             </div>\r\n\r\n//             <div className=\"add-comment\">\r\n//               <span className=\"material-symbols-outlined\">\r\n//                 mood\r\n//               </span>\r\n//               <input type=\"text\" placeholder='Add a Comment' value={comment} onChange={(e) => { setComment(e.target.value) }} />\r\n//               <button className=\"comment\" onClick={() => { makeComment(comment, posts._id) }}>Post</button>\r\n//             </div>\r\n//           </div>\r\n//         )\r\n// })}\r\n\r\n//       {show && (\r\n//         <div className=\"showcomment\">\r\n//         <div className=\"container\">\r\n//           <div className=\"postpic\">\r\n//             <img src=\"\" alt=\"\" />\r\n//           </div>\r\n//           <div className=\"details\">\r\n\r\n//             {/* card-header */}\r\n//             <div className=\"card-header\" style={{ borderBottom: \"1px solid #00000029\" }}>\r\n//               <div className=\"card-pic\">\r\n//                 <img src={item.photo} alt=\" \" />\r\n//                 <h5>{item.postedBy.name}</h5>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* comment-section */}\r\n//             <div className=\"commentsection\" style={{ borderBottom: \"1px solid #00000029\" }} >\r\n//               {\r\n//                 item.comments.map((comment)=>{\r\n//                 return  (<p className='comm'>\r\n//                 <span className=\"commenter\" style={{ fontWeight: \"bolder\" }} >{comment.postedBy}{\" \"}  </span>\r\n//                 <span className=\"commenttext\">{comment.comment}</span>\r\n//               </p>)\r\n//                 })\r\n//               }\r\n              \r\n//             </div>\r\n\r\n//             {/* card content */}\r\n//             <div className=\"card-content\">\r\n//               <p >{posts.likes.length} likes</p>\r\n//               <p>{posts.body}</p>\r\n//               <p style={{fontWeight:\"bold\",cyrsor:\"pointer\"}}\r\n//               onClick={()=>{\r\n//                 toggleComment(posts);\r\n//               }}>\r\n//                 View all comments\r\n//               </p>\r\n//             </div>\r\n//             <div className=\"add-comment\">\r\n//               <span className=\"material-symbols-outlined\">\r\n//                 mood\r\n//               </span>\r\n//               <input type=\"text\" placeholder='Add a Comment' value={comment} onChange={(e) => { setComment(e.target.value) }} />\r\n//               <button className=\"comment\"\r\n//                onClick={()=>{makeComment(comment,item._id)\r\n//                 toggleComment();\r\n//                }}\r\n//               >Post</button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"closecomment\" onClick={()=>{toggleComment(posts)}}>\r\n//           <span className=\"material-symbols-outlined material-symbols-outlined-comment\">\r\n//             close\r\n//           </span>\r\n//         </div>\r\n//       </div>\r\n//       )}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n// export default Home\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Home.css';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\nconst API_URL = process.env.REACT_APP_API_URL || \"http://localhost:5000\";\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState([]);\r\n  const [comment, setComment] = useState('');\r\n  const [show, setShow] = useState(false);\r\n  const [item, setItem] = useState(null);\r\n\r\n  const notifya = (msg) => toast.error(msg);\r\n  const notifyb = (msg) => toast.success(msg);\r\n\r\n  const toggleComment = (post = null) => {\r\n    if (show) {\r\n      setShow(false);\r\n      setItem(null);\r\n    } else {\r\n      setShow(true);\r\n      setItem(post);\r\n    }\r\n  };\r\n\r\n  // Fetch all posts\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('jwt');\r\n    if (!token) {\r\n      navigate('/signin');\r\n      return;\r\n    }\r\n\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const res = await fetch(`${API_URL}/posts/allposts`, {\r\n          headers: {\r\n            Authorization: 'Bearer ' + token,\r\n          },\r\n        });\r\n\r\n        if (res.status === 401) {\r\n          notifya('You must be logged in to see posts');\r\n          navigate('/signin');\r\n          return;\r\n        }\r\n\r\n        const result = await res.json();\r\n        setData(result.posts || []);\r\n        console.log('API Response:', result);\r\n      } catch (err) {\r\n        console.error(err);\r\n        notifya('Failed to fetch posts');\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const updatePostData = (updatedPost) => {\r\n    const newData = data.map((p) => (p._id === updatedPost._id ? updatedPost : p));\r\n    setData(newData);\r\n    if (item && item._id === updatedPost._id) {\r\n      setItem(updatedPost);\r\n    }\r\n  };\r\n\r\n  const likePost = async (id) => {\r\n    const token = localStorage.getItem('jwt');\r\n    console.log(\"JWT Token:\", localStorage.getItem(\"jwt\"));\r\n    try {\r\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/posts/like/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + token,\r\n        },\r\n        body: JSON.stringify({ postId: id }),\r\n      });\r\n      const result = await res.json();\r\n      updatePostData(result);\r\n    } catch (err) {\r\n      console.error(err);\r\n      notifya('Failed to like post');\r\n    }\r\n  };\r\n\r\n  const unlikePost = async (id) => {\r\n    const token = localStorage.getItem('jwt');\r\n    try {\r\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/posts/unlike/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + token,\r\n        },\r\n        body: JSON.stringify({ postId: id }),\r\n      });\r\n      const result = await res.json();\r\n      updatePostData(result);\r\n    } catch (err) {\r\n      console.error(err);\r\n      notifya('Failed to unlike post');\r\n    }\r\n  };\r\n\r\n  const makeComment = async (text, id) => {\r\n    const token = localStorage.getItem('jwt');\r\n    try {\r\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/posts/comment/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + token,\r\n        },\r\n        body: JSON.stringify({ postId: id, text }),\r\n      });\r\n      const result = await res.json();\r\n      updatePostData(result);\r\n      setComment('');\r\n      notifyb('Comment added successfully');\r\n    } catch (err) {\r\n      console.error(err);\r\n      notifya('Failed to add comment');\r\n    }\r\n  };\r\n\r\n  const userId = JSON.parse(localStorage.getItem('user'))?._id;\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {data.map((posts) => (\r\n        <div className=\"card\" key={posts._id}>\r\n          <div className=\"card-header\">\r\n            <div className=\"card-pic\">\r\n              <img src={posts.postedBy.photo || 'https://cdn-icons-png.flaticon.com/128/64/64572.png'} alt=\"profile\" />\r\n              <h5>\r\n                <Link to={`/profile/${posts.postedBy._id}`}>{posts.postedBy.name}</Link>\r\n              </h5>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"card-image\">\r\n            <img src={posts.photo} alt=\"\" />\r\n          </div>\r\n\r\n          {posts.likes.includes(userId) ? (\r\n            <span className=\"material-symbols-outlined material-symbols-outlined -red\" onClick={() => unlikePost(posts._id)}>\r\n              favorite\r\n            </span>\r\n          ) : (\r\n            <span className=\"material-symbols-outlined\" onClick={() => likePost(posts._id)}>\r\n              favorite\r\n            </span>\r\n          )}\r\n\r\n          <div className=\"card-content\">\r\n            <p>{posts.likes.length} likes</p>\r\n            <p>{posts.body}</p>\r\n          </div>\r\n\r\n          <div className=\"add-comment\">\r\n            <span className=\"material-symbols-outlined\">mood</span>\r\n            <input type=\"text\" placeholder=\"Add a Comment\" value={comment} onChange={(e) => setComment(e.target.value)} />\r\n            <button className=\"comment\" onClick={() => makeComment(comment, posts._id)}>\r\n              Post\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      {show && item && (\r\n        <div className=\"showcomment\">\r\n          <div className=\"container\">\r\n            <div className=\"postpic\">\r\n              <img src={item.photo} alt=\"\" />\r\n            </div>\r\n            <div className=\"details\">\r\n              <div className=\"card-header\" style={{ borderBottom: '1px solid #00000029' }}>\r\n                <div className=\"card-pic\">\r\n                  <img src={item.postedBy.photo || 'https://cdn-icons-png.flaticon.com/128/64/64572.png'} alt=\"profile\" />\r\n                  <h5>{item.postedBy.name}</h5>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"commentsection\" style={{ borderBottom: '1px solid #00000029' }}>\r\n                {item.comments.map((comment, idx) => (\r\n                  <p className=\"comm\" key={idx}>\r\n                    <span className=\"commenter\" style={{ fontWeight: 'bolder' }}>\r\n                      {comment.postedBy.name || comment.postedBy}{' '}\r\n                    </span>\r\n                    <span className=\"commenttext\">{comment.comment}</span>\r\n                  </p>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"card-content\">\r\n                <p>{item.likes.length} likes</p>\r\n                <p>{item.body}</p>\r\n                <p\r\n                  style={{ fontWeight: 'bold', cursor: 'pointer' }}\r\n                  onClick={() => {\r\n                    toggleComment();\r\n                  }}\r\n                >\r\n                  Close comments\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"add-comment\">\r\n                <span className=\"material-symbols-outlined\">mood</span>\r\n                <input type=\"text\" placeholder=\"Add a Comment\" value={comment} onChange={(e) => setComment(e.target.value)} />\r\n                <button\r\n                  className=\"comment\"\r\n                  onClick={() => {\r\n                    makeComment(comment, item._id);\r\n                    setComment('');\r\n                  }}\r\n                >\r\n                  Post\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}