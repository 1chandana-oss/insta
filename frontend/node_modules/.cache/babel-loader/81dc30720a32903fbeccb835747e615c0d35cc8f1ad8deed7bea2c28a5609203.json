{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack_instagram\\\\insta_clone\\\\backend\\\\frontend\\\\src\\\\components\\\\Signin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport logo from '../img/logo.png';\nimport './Signin.css';\nimport { toast } from 'react-toastify';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { LoginContext } from '../context/LoginContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Signin = () => {\n  _s();\n  const {\n    setUserlogin\n  } = useContext(LoginContext);\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const notifya = msg => toast.error(msg);\n  const notifyb = msg => toast.success(msg);\n  const emailregex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n  const postdata = () => {\n    if (!emailregex.test(email)) {\n      notifya(\"invalid email\");\n      return;\n    }\n    fetch(`${process.env.REACT_APP_API_URL}/auth/signin`, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        email: email,\n        password: password\n      })\n    }).then(res => res.json()).then(data => {\n      if (data.error) {\n        notifya(data.error);\n      } else {\n        notifyb(\"Signed in successfully\");\n        console.log(data);\n        localStorage.setItem(\"token\", data.token);\n        localStorage.setItem(\"user\", JSON.stringify(data.user));\n        setUserlogin(true);\n        navigate('/');\n      }\n      console.log(data);\n    }).catch(err => {\n      notifya(\"something went wrong\");\n      console.error(err);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"signin\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginform\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"signuplogo\",\n          src: logo,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            name: \"email\",\n            id: \"email\",\n            value: email,\n            placeholder: \"Email\",\n            onChange: e => {\n              setEmail(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            value: password,\n            placeholder: \"Password\",\n            onChange: e => {\n              setPassword(e.target.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          id: \"login-btn\",\n          onClick: () => {\n            postdata();\n          },\n          value: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loginform2\",\n        children: [\"Don't have an account ?\", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/signup\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              color: \"blue\",\n              cursor: \"pointer\"\n            },\n            children: \"Sign Up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(Signin, \"q7Y5OPBifcEmiPuNAnrzroUnnKQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Signin;\nexport default Signin;\nvar _c;\n$RefreshReg$(_c, \"Signin\");","map":{"version":3,"names":["React","useState","useContext","logo","toast","Link","useNavigate","LoginContext","jsxDEV","_jsxDEV","Signin","_s","setUserlogin","navigate","email","setEmail","password","setPassword","notifya","msg","error","notifyb","success","emailregex","postdata","test","fetch","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","then","res","json","data","console","log","localStorage","setItem","token","user","catch","err","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","name","id","value","placeholder","onChange","e","target","onClick","to","style","color","cursor","_c","$RefreshReg$"],"sources":["D:/fullstack_instagram/insta_clone/backend/frontend/src/components/Signin.js"],"sourcesContent":["import React ,{useState,useContext} from 'react'\r\nimport logo from '../img/logo.png'\r\nimport './Signin.css'\r\nimport {  toast } from 'react-toastify';\r\nimport { Link ,useNavigate} from 'react-router-dom'\r\nimport { LoginContext } from '../context/LoginContext';\r\nconst    Signin = () => {\r\n    const {setUserlogin}=useContext(LoginContext)\r\n    const navigate=useNavigate();\r\n    const [email, setEmail] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const notifya=(msg)=>toast.error(msg)\r\n    const notifyb=(msg)=>toast.success(msg)\r\n    const emailregex=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\r\n    const postdata = ()=>{\r\n        if(!emailregex.test(email)){\r\n            notifya(\"invalid email\")\r\n            return\r\n            \r\n        }\r\n        fetch(`${process.env.REACT_APP_API_URL}/auth/signin`,{\r\n           method:\"POST\",\r\n           headers:{\r\n            \"Content-Type\":\"application/json\"\r\n           },\r\n           body:JSON.stringify({ \r\n            email:email,\r\n            password:password\r\n           }),\r\n        }).then(res=>res.json())\r\n        .then(data=>{\r\n            if(data.error){\r\n            notifya(data.error)\r\n            }else{\r\n                notifyb(\"Signed in successfully\")\r\n                console.log(data)\r\n                localStorage.setItem(\"token\",data.token)\r\n                localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n                setUserlogin(true)\r\n                navigate('/')\r\n            }\r\n            console.log(data)\r\n        }).catch(err=>{\r\n            notifya(\"something went wrong\")\r\n            console.error(err)\r\n        })\r\n        } \r\n  return (\r\n    <div className=\"signin\">\r\n        <div>\r\n            <div className=\"loginform\">\r\n                <img className=\"signuplogo\" src={logo} alt=\"\" />\r\n            \r\n            <div>\r\n                <input type=\"email\" name=\"email\" id=\"email\" value={email} placeholder='Email' onChange={(e)=>{setEmail(e.target.value)}}/>\r\n            </div>\r\n            <div>\r\n                <input type=\"password\" name=\"password\" id=\"password\" value={password} placeholder='Password' onChange={(e)=>{setPassword(e.target.value)}}/>\r\n            </div>\r\n            <input type=\"submit\" id=\"login-btn\" onClick={()=>{postdata()}} value=\"Sign In\" />\r\n            </div>\r\n            <div className=\"loginform2\">\r\n                Don't have an account ?\r\n                <Link to =\"/signup\">\r\n                <span style={{color:\"blue\",cursor:\"pointer\"}}>Sign Up</span>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Signin\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}