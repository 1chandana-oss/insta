{"ast":null,"code":"var _jsxFileName = \"D:\\\\fullstack_instagram\\\\insta_clone\\\\backend\\\\frontend\\\\src\\\\components\\\\Home.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useState } from 'react'\n// import './Home.css';\n// import {  toast } from 'react-toastify';\n// import { useNavigate } from 'react-router-dom';\n// import { Link } from 'react-router-dom';\n// const Home = () => {\n//   var profileLink=\"https://cdn-icons-png.flaticon.com/128/64/64572.png\"\n//   const navigate = useNavigate();\n//   const [data, setData] = useState([]);\n//   const [comment, setComment] = useState(\" \")\n//   const [show,setShow] =useState(false);\n//   const [item, setItem] = useState([])\n//   const [posts, setPosts] = useState()\n//   const notifya=(msg)=>toast.error(msg)\n//   const notifyb=(msg)=>toast.success(msg)\n\n//   const toggleComment=(posts)=>{\n//     if(show){\n//       setShow(false);\n\n//     }else{\n//       setShow(true);\n//       setItem(posts)\n\n//     }\n//   }\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"jwt\");\n//     if (!token) {\n//       navigate(\"/signup\")\n//     }\n\n//     //  fetching all post\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/allposts`, {\n//       headers: {\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n//       },\n\n//     }).then(res => res.json())\n//     .then((result)=>{\n//       console.log(\"API Response:\", data);\n//       console.log(result)\n//       setData(data)\n//     })\n//       .catch(err => console.log(err))\n//   }, [])\n\n//   const likepost = (id) => {\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/like/${id}`, {\n//       method: \"put\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n//       },\n//       body: JSON.stringify({\n//         postId: id\n//       })\n//     }).then(res => res.json())\n//       .then((result) => {\n//         const newdata = data.map((posts) => {\n//           if (posts._id == result._id) {\n//             return result\n//           } else {\n//             return posts\n//           }\n//         })\n//         setData(newdata)\n//         console.log(result)\n//       })\n//   }\n\n//   const unlikepost = (id) => {\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/unlike/${id}`, {\n//       method: \"put\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n//       },\n//       body: JSON.stringify({\n//         postId: id\n//       })\n//     }).then(res => res.json())\n//       .then((result) => {\n//         const newdata = data.map((posts) => {\n//           if (posts._id == result._id) {\n//             return result\n//           } else {\n//             return posts\n//           }\n//         })\n//         setData(newdata)\n//         console.log(result)\n//       })\n//   }\n\n//   const makeComment = (text, id) => {\n//     // console.log(comment)\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/comment/${id}`, {\n//       method: \"put\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n//       },\n//       body: JSON.stringify({\n//         postId: id,\n//         text: text,\n//       })\n//     }).then(res => res.json())\n//       .then((result) => {\n//          const newdata = data.map((posts) => {\n//           if (posts._id == result._id) {\n//             return result\n//           } else {\n//             return posts\n//           }\n//         })\n//         setData(newdata)\n//         setComment(\" \")\n//         notifyb(\"suuccesfully commented\")\n//         console.log(result)\n//       })\n//   }\n//   return (\n//     <div className=\"home\">\n//       {data.map((posts) => {\n//         // console.log(posts)\n//         return (\n//           <div className=\"card\">\n//             <div className=\"card-header\">\n//               <div className=\"card-pic\">\n//                 <img src={posts.photo ?posts.postedBy.photo:\"profileLink\"} alt=\" \" />\n//                 <h5>\n//                   <Link to={`/profile/${posts.postedBy._id}`}>\n//                   {posts.postedBy.name}\n//                   </Link>\n//                   </h5>\n//               </div>\n//             </div>\n//             <div className=\"card-image\">\n//               <img src={posts.photo} alt=\"\" />\n//             </div>\n//             {\n//               posts.likes.includes(JSON.parse(localStorage.getItem(\"user\"))._id)\n//                 ? (\n//                   <span className=\"material-symbols-outlined material-symbols-outlined -red\" onClick={() => { unlikepost(posts._id) }}>\n//                     favorite\n//                   </span>\n//                 ) : (<span className=\"material-symbols-outlined\" onClick={() => { likepost(posts._id) }}>\n//                   favorite\n//                 </span>)\n//             }\n//             <div className=\"card-content\">\n//               <p > {item.likes.length} like</p>\n//               <p>{posts.body}</p>\n//             </div>\n\n//             <div className=\"add-comment\">\n//               <span className=\"material-symbols-outlined\">\n//                 mood\n//               </span>\n//               <input type=\"text\" placeholder='Add a Comment' value={comment} onChange={(e) => { setComment(e.target.value) }} />\n//               <button className=\"comment\" onClick={() => { makeComment(comment, posts._id) }}>Post</button>\n//             </div>\n//           </div>\n//         )\n// })}\n\n//       {show && (\n//         <div className=\"showcomment\">\n//         <div className=\"container\">\n//           <div className=\"postpic\">\n//             <img src=\"\" alt=\"\" />\n//           </div>\n//           <div className=\"details\">\n\n//             {/* card-header */}\n//             <div className=\"card-header\" style={{ borderBottom: \"1px solid #00000029\" }}>\n//               <div className=\"card-pic\">\n//                 <img src={item.photo} alt=\" \" />\n//                 <h5>{item.postedBy.name}</h5>\n//               </div>\n//             </div>\n\n//             {/* comment-section */}\n//             <div className=\"commentsection\" style={{ borderBottom: \"1px solid #00000029\" }} >\n//               {\n//                 item.comments.map((comment)=>{\n//                 return  (<p className='comm'>\n//                 <span className=\"commenter\" style={{ fontWeight: \"bolder\" }} >{comment.postedBy}{\" \"}  </span>\n//                 <span className=\"commenttext\">{comment.comment}</span>\n//               </p>)\n//                 })\n//               }\n\n//             </div>\n\n//             {/* card content */}\n//             <div className=\"card-content\">\n//               <p >{posts.likes.length} likes</p>\n//               <p>{posts.body}</p>\n//               <p style={{fontWeight:\"bold\",cyrsor:\"pointer\"}}\n//               onClick={()=>{\n//                 toggleComment(posts);\n//               }}>\n//                 View all comments\n//               </p>\n//             </div>\n//             <div className=\"add-comment\">\n//               <span className=\"material-symbols-outlined\">\n//                 mood\n//               </span>\n//               <input type=\"text\" placeholder='Add a Comment' value={comment} onChange={(e) => { setComment(e.target.value) }} />\n//               <button className=\"comment\"\n//                onClick={()=>{makeComment(comment,item._id)\n//                 toggleComment();\n//                }}\n//               >Post</button>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"closecomment\" onClick={()=>{toggleComment(posts)}}>\n//           <span className=\"material-symbols-outlined material-symbols-outlined-comment\">\n//             close\n//           </span>\n//         </div>\n//       </div>\n//       )}\n//     </div>\n//   )\n// }\n\n// export default Home\n\nimport React, { useEffect, useState } from 'react';\nimport './Home.css';\nimport { toast } from 'react-toastify';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Home = () => {\n  _s();\n  var _JSON$parse;\n  const navigate = useNavigate();\n  const [data, setData] = useState([]);\n  const [comment, setComment] = useState('');\n  const [show, setShow] = useState(false);\n  const [item, setItem] = useState(null);\n  const notifya = msg => toast.error(msg);\n  const notifyb = msg => toast.success(msg);\n  const toggleComment = (post = null) => {\n    if (show) {\n      setShow(false);\n      setItem(null);\n    } else {\n      setShow(true);\n      setItem(post);\n    }\n  };\n\n  // Fetch all posts\n  useEffect(() => {\n    const token = localStorage.getItem('jwt');\n    if (!token) {\n      navigate('/signin');\n      return;\n    }\n    const fetchPosts = async () => {\n      try {\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/posts/allposts`, {\n          headers: {\n            Authorization: 'Bearer ' + token\n          }\n        });\n        if (res.status === 401) {\n          notifya('You must be logged in to see posts');\n          navigate('/signin');\n          return;\n        }\n        const result = await res.json();\n        setData(result.posts || []);\n        console.log('API Response:', result);\n      } catch (err) {\n        console.error(err);\n        notifya('Failed to fetch posts');\n      }\n    };\n    fetchPosts();\n  }, []);\n  const updatePostData = updatedPost => {\n    const newData = data.map(p => p._id === updatedPost._id ? updatedPost : p);\n    setData(newData);\n    if (item && item._id === updatedPost._id) {\n      setItem(updatedPost);\n    }\n  };\n  const likePost = async id => {\n    const token = localStorage.getItem('jwt');\n    console.log(\"JWT Token:\", localStorage.getItem(\"jwt\"));\n    try {\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/posts/like/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        },\n        body: JSON.stringify({\n          postId: id\n        })\n      });\n      const result = await res.json();\n      updatePostData(result);\n    } catch (err) {\n      console.error(err);\n      notifya('Failed to like post');\n    }\n  };\n  const unlikePost = async id => {\n    const token = localStorage.getItem('jwt');\n    try {\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/posts/unlike/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        },\n        body: JSON.stringify({\n          postId: id\n        })\n      });\n      const result = await res.json();\n      updatePostData(result);\n    } catch (err) {\n      console.error(err);\n      notifya('Failed to unlike post');\n    }\n  };\n  const makeComment = async (text, id) => {\n    const token = localStorage.getItem('jwt');\n    try {\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/posts/comment/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + token\n        },\n        body: JSON.stringify({\n          postId: id,\n          text\n        })\n      });\n      const result = await res.json();\n      updatePostData(result);\n      setComment('');\n      notifyb('Comment added successfully');\n    } catch (err) {\n      console.error(err);\n      notifya('Failed to add comment');\n    }\n  };\n  const userId = (_JSON$parse = JSON.parse(localStorage.getItem('user'))) === null || _JSON$parse === void 0 ? void 0 : _JSON$parse._id;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"home\",\n    children: [data.map(posts => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-header\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-pic\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: posts.postedBy.photo || 'https://cdn-icons-png.flaticon.com/128/64/64572.png',\n            alt: \"profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: `/profile/${posts.postedBy._id}`,\n              children: posts.postedBy.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 371,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-image\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: posts.photo,\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 11\n      }, this), posts.likes.includes(userId) ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined material-symbols-outlined -red\",\n        onClick: () => unlikePost(posts._id),\n        children: \"favorite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"material-symbols-outlined\",\n        onClick: () => likePost(posts._id),\n        children: \"favorite\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-content\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [posts.likes.length, \" likes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 394,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: posts.body\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-comment\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"material-symbols-outlined\",\n          children: \"mood\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Add a Comment\",\n          value: comment,\n          onChange: e => setComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 400,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"comment\",\n          onClick: () => makeComment(comment, posts._id),\n          children: \"Post\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 11\n      }, this)]\n    }, posts._id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 369,\n      columnNumber: 9\n    }, this)), show && item && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"showcomment\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"postpic\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: item.photo,\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 412,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"details\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            style: {\n              borderBottom: '1px solid #00000029'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"card-pic\",\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: item.postedBy.photo || 'https://cdn-icons-png.flaticon.com/128/64/64572.png',\n                alt: \"profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n                children: item.postedBy.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 418,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"commentsection\",\n            style: {\n              borderBottom: '1px solid #00000029'\n            },\n            children: item.comments.map((comment, idx) => /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"comm\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"commenter\",\n                style: {\n                  fontWeight: 'bolder'\n                },\n                children: [comment.postedBy.name || comment.postedBy, ' ']\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"commenttext\",\n                children: comment.comment\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 428,\n                columnNumber: 21\n              }, this)]\n            }, idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 19\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 422,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [item.likes.length, \" likes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 434,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: item.body\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 435,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                fontWeight: 'bold',\n                cursor: 'pointer'\n              },\n              onClick: () => {\n                toggleComment();\n              },\n              children: \"Close comments\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 433,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add-comment\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"material-symbols-outlined\",\n              children: \"mood\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 447,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Add a Comment\",\n              value: comment,\n              onChange: e => setComment(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"comment\",\n              onClick: () => {\n                makeComment(comment, item._id);\n                setComment('');\n              },\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 449,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 446,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 367,\n    columnNumber: 5\n  }, this);\n};\n_s(Home, \"78yHSttSaqdadFj4ro4kE/qmxBs=\", false, function () {\n  return [useNavigate];\n});\n_c = Home;\nexport default Home;\nvar _c;\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","toast","useNavigate","Link","jsxDEV","_jsxDEV","Home","_s","_JSON$parse","navigate","data","setData","comment","setComment","show","setShow","item","setItem","notifya","msg","error","notifyb","success","toggleComment","post","token","localStorage","getItem","fetchPosts","res","fetch","process","env","REACT_APP_API_URL","headers","Authorization","status","result","json","posts","console","log","err","updatePostData","updatedPost","newData","map","p","_id","likePost","id","method","body","JSON","stringify","postId","unlikePost","makeComment","text","userId","parse","className","children","src","postedBy","photo","alt","fileName","_jsxFileName","lineNumber","columnNumber","to","name","likes","includes","onClick","length","type","placeholder","value","onChange","e","target","style","borderBottom","comments","idx","fontWeight","cursor","_c","$RefreshReg$"],"sources":["D:/fullstack_instagram/insta_clone/backend/frontend/src/components/Home.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\r\n// import './Home.css';\r\n// import {  toast } from 'react-toastify';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n// const Home = () => {\r\n//   var profileLink=\"https://cdn-icons-png.flaticon.com/128/64/64572.png\"\r\n//   const navigate = useNavigate();\r\n//   const [data, setData] = useState([]);\r\n//   const [comment, setComment] = useState(\" \")\r\n//   const [show,setShow] =useState(false);\r\n//   const [item, setItem] = useState([])\r\n//   const [posts, setPosts] = useState()\r\n//   const notifya=(msg)=>toast.error(msg)\r\n//   const notifyb=(msg)=>toast.success(msg)\r\n\r\n\r\n//   const toggleComment=(posts)=>{\r\n//     if(show){\r\n//       setShow(false);\r\n     \r\n//     }else{\r\n//       setShow(true);\r\n//       setItem(posts)\r\n     \r\n//     }\r\n//   }\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem(\"jwt\");\r\n//     if (!token) {\r\n//       navigate(\"/signup\")\r\n//     }\r\n  \r\n//     //  fetching all post\r\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/allposts`, {\r\n//       headers: {\r\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n//       },\r\n\r\n//     }).then(res => res.json())\r\n//     .then((result)=>{\r\n//       console.log(\"API Response:\", data);\r\n//       console.log(result)\r\n//       setData(data)\r\n//     })\r\n//       .catch(err => console.log(err))\r\n//   }, [])\r\n\r\n//   const likepost = (id) => {\r\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/like/${id}`, {\r\n//       method: \"put\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n//       },\r\n//       body: JSON.stringify({\r\n//         postId: id\r\n//       })\r\n//     }).then(res => res.json())\r\n//       .then((result) => {\r\n//         const newdata = data.map((posts) => {\r\n//           if (posts._id == result._id) {\r\n//             return result\r\n//           } else {\r\n//             return posts\r\n//           }\r\n//         })\r\n//         setData(newdata)\r\n//         console.log(result)\r\n//       })\r\n//   }\r\n\r\n//   const unlikepost = (id) => {\r\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/unlike/${id}`, {\r\n//       method: \"put\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n//       },\r\n//       body: JSON.stringify({\r\n//         postId: id\r\n//       })\r\n//     }).then(res => res.json())\r\n//       .then((result) => {\r\n//         const newdata = data.map((posts) => {\r\n//           if (posts._id == result._id) {\r\n//             return result\r\n//           } else {\r\n//             return posts\r\n//           }\r\n//         })\r\n//         setData(newdata)\r\n//         console.log(result)\r\n//       })\r\n//   }\r\n\r\n//   const makeComment = (text, id) => {\r\n//     // console.log(comment)\r\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/comment/${id}`, {\r\n//       method: \"put\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n//       },\r\n//       body: JSON.stringify({\r\n//         postId: id,\r\n//         text: text,\r\n//       })\r\n//     }).then(res => res.json())\r\n//       .then((result) => {\r\n//          const newdata = data.map((posts) => {\r\n//           if (posts._id == result._id) {\r\n//             return result\r\n//           } else {\r\n//             return posts\r\n//           }\r\n//         })\r\n//         setData(newdata)\r\n//         setComment(\" \")\r\n//         notifyb(\"suuccesfully commented\")\r\n//         console.log(result)\r\n//       })\r\n//   }\r\n//   return (\r\n//     <div className=\"home\">\r\n//       {data.map((posts) => {\r\n//         // console.log(posts)\r\n//         return (\r\n//           <div className=\"card\">\r\n//             <div className=\"card-header\">\r\n//               <div className=\"card-pic\">\r\n//                 <img src={posts.photo ?posts.postedBy.photo:\"profileLink\"} alt=\" \" />\r\n//                 <h5>\r\n//                   <Link to={`/profile/${posts.postedBy._id}`}>\r\n//                   {posts.postedBy.name}\r\n//                   </Link>\r\n//                   </h5>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"card-image\">\r\n//               <img src={posts.photo} alt=\"\" />\r\n//             </div>\r\n//             {\r\n//               posts.likes.includes(JSON.parse(localStorage.getItem(\"user\"))._id)\r\n//                 ? (\r\n//                   <span className=\"material-symbols-outlined material-symbols-outlined -red\" onClick={() => { unlikepost(posts._id) }}>\r\n//                     favorite\r\n//                   </span>\r\n//                 ) : (<span className=\"material-symbols-outlined\" onClick={() => { likepost(posts._id) }}>\r\n//                   favorite\r\n//                 </span>)\r\n//             }\r\n//             <div className=\"card-content\">\r\n//               <p > {item.likes.length} like</p>\r\n//               <p>{posts.body}</p>\r\n//             </div>\r\n\r\n//             <div className=\"add-comment\">\r\n//               <span className=\"material-symbols-outlined\">\r\n//                 mood\r\n//               </span>\r\n//               <input type=\"text\" placeholder='Add a Comment' value={comment} onChange={(e) => { setComment(e.target.value) }} />\r\n//               <button className=\"comment\" onClick={() => { makeComment(comment, posts._id) }}>Post</button>\r\n//             </div>\r\n//           </div>\r\n//         )\r\n// })}\r\n\r\n//       {show && (\r\n//         <div className=\"showcomment\">\r\n//         <div className=\"container\">\r\n//           <div className=\"postpic\">\r\n//             <img src=\"\" alt=\"\" />\r\n//           </div>\r\n//           <div className=\"details\">\r\n\r\n//             {/* card-header */}\r\n//             <div className=\"card-header\" style={{ borderBottom: \"1px solid #00000029\" }}>\r\n//               <div className=\"card-pic\">\r\n//                 <img src={item.photo} alt=\" \" />\r\n//                 <h5>{item.postedBy.name}</h5>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* comment-section */}\r\n//             <div className=\"commentsection\" style={{ borderBottom: \"1px solid #00000029\" }} >\r\n//               {\r\n//                 item.comments.map((comment)=>{\r\n//                 return  (<p className='comm'>\r\n//                 <span className=\"commenter\" style={{ fontWeight: \"bolder\" }} >{comment.postedBy}{\" \"}  </span>\r\n//                 <span className=\"commenttext\">{comment.comment}</span>\r\n//               </p>)\r\n//                 })\r\n//               }\r\n              \r\n//             </div>\r\n\r\n//             {/* card content */}\r\n//             <div className=\"card-content\">\r\n//               <p >{posts.likes.length} likes</p>\r\n//               <p>{posts.body}</p>\r\n//               <p style={{fontWeight:\"bold\",cyrsor:\"pointer\"}}\r\n//               onClick={()=>{\r\n//                 toggleComment(posts);\r\n//               }}>\r\n//                 View all comments\r\n//               </p>\r\n//             </div>\r\n//             <div className=\"add-comment\">\r\n//               <span className=\"material-symbols-outlined\">\r\n//                 mood\r\n//               </span>\r\n//               <input type=\"text\" placeholder='Add a Comment' value={comment} onChange={(e) => { setComment(e.target.value) }} />\r\n//               <button className=\"comment\"\r\n//                onClick={()=>{makeComment(comment,item._id)\r\n//                 toggleComment();\r\n//                }}\r\n//               >Post</button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"closecomment\" onClick={()=>{toggleComment(posts)}}>\r\n//           <span className=\"material-symbols-outlined material-symbols-outlined-comment\">\r\n//             close\r\n//           </span>\r\n//         </div>\r\n//       </div>\r\n//       )}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n// export default Home\r\n\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport './Home.css';\r\nimport { toast } from 'react-toastify';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n  const [data, setData] = useState([]);\r\n  const [comment, setComment] = useState('');\r\n  const [show, setShow] = useState(false);\r\n  const [item, setItem] = useState(null);\r\n\r\n  const notifya = (msg) => toast.error(msg);\r\n  const notifyb = (msg) => toast.success(msg);\r\n\r\n  const toggleComment = (post = null) => {\r\n    if (show) {\r\n      setShow(false);\r\n      setItem(null);\r\n    } else {\r\n      setShow(true);\r\n      setItem(post);\r\n    }\r\n  };\r\n\r\n  // Fetch all posts\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('jwt');\r\n    if (!token) {\r\n      navigate('/signin');\r\n      return;\r\n    }\r\n\r\n    const fetchPosts = async () => {\r\n      try {\r\n        const res = await fetch(`${process.env.REACT_APP_API_URL}/posts/allposts`, {\r\n          headers: {\r\n            Authorization: 'Bearer ' + token,\r\n          },\r\n        });\r\n\r\n        if (res.status === 401) {\r\n          notifya('You must be logged in to see posts');\r\n          navigate('/signin');\r\n          return;\r\n        }\r\n\r\n        const result = await res.json();\r\n        setData(result.posts || []);\r\n        console.log('API Response:', result);\r\n      } catch (err) {\r\n        console.error(err);\r\n        notifya('Failed to fetch posts');\r\n      }\r\n    };\r\n\r\n    fetchPosts();\r\n  }, []);\r\n\r\n  const updatePostData = (updatedPost) => {\r\n    const newData = data.map((p) => (p._id === updatedPost._id ? updatedPost : p));\r\n    setData(newData);\r\n    if (item && item._id === updatedPost._id) {\r\n      setItem(updatedPost);\r\n    }\r\n  };\r\n\r\n  const likePost = async (id) => {\r\n    const token = localStorage.getItem('jwt');\r\n    console.log(\"JWT Token:\", localStorage.getItem(\"jwt\"));\r\n    try {\r\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/posts/like/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + token,\r\n        },\r\n        body: JSON.stringify({ postId: id }),\r\n      });\r\n      const result = await res.json();\r\n      updatePostData(result);\r\n    } catch (err) {\r\n      console.error(err);\r\n      notifya('Failed to like post');\r\n    }\r\n  };\r\n\r\n  const unlikePost = async (id) => {\r\n    const token = localStorage.getItem('jwt');\r\n    try {\r\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/posts/unlike/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + token,\r\n        },\r\n        body: JSON.stringify({ postId: id }),\r\n      });\r\n      const result = await res.json();\r\n      updatePostData(result);\r\n    } catch (err) {\r\n      console.error(err);\r\n      notifya('Failed to unlike post');\r\n    }\r\n  };\r\n\r\n  const makeComment = async (text, id) => {\r\n    const token = localStorage.getItem('jwt');\r\n    try {\r\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/posts/comment/${id}`, {\r\n        method: 'PUT',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          Authorization: 'Bearer ' + token,\r\n        },\r\n        body: JSON.stringify({ postId: id, text }),\r\n      });\r\n      const result = await res.json();\r\n      updatePostData(result);\r\n      setComment('');\r\n      notifyb('Comment added successfully');\r\n    } catch (err) {\r\n      console.error(err);\r\n      notifya('Failed to add comment');\r\n    }\r\n  };\r\n\r\n  const userId = JSON.parse(localStorage.getItem('user'))?._id;\r\n\r\n  return (\r\n    <div className=\"home\">\r\n      {data.map((posts) => (\r\n        <div className=\"card\" key={posts._id}>\r\n          <div className=\"card-header\">\r\n            <div className=\"card-pic\">\r\n              <img src={posts.postedBy.photo || 'https://cdn-icons-png.flaticon.com/128/64/64572.png'} alt=\"profile\" />\r\n              <h5>\r\n                <Link to={`/profile/${posts.postedBy._id}`}>{posts.postedBy.name}</Link>\r\n              </h5>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"card-image\">\r\n            <img src={posts.photo} alt=\"\" />\r\n          </div>\r\n\r\n          {posts.likes.includes(userId) ? (\r\n            <span className=\"material-symbols-outlined material-symbols-outlined -red\" onClick={() => unlikePost(posts._id)}>\r\n              favorite\r\n            </span>\r\n          ) : (\r\n            <span className=\"material-symbols-outlined\" onClick={() => likePost(posts._id)}>\r\n              favorite\r\n            </span>\r\n          )}\r\n\r\n          <div className=\"card-content\">\r\n            <p>{posts.likes.length} likes</p>\r\n            <p>{posts.body}</p>\r\n          </div>\r\n\r\n          <div className=\"add-comment\">\r\n            <span className=\"material-symbols-outlined\">mood</span>\r\n            <input type=\"text\" placeholder=\"Add a Comment\" value={comment} onChange={(e) => setComment(e.target.value)} />\r\n            <button className=\"comment\" onClick={() => makeComment(comment, posts._id)}>\r\n              Post\r\n            </button>\r\n          </div>\r\n        </div>\r\n      ))}\r\n\r\n      {show && item && (\r\n        <div className=\"showcomment\">\r\n          <div className=\"container\">\r\n            <div className=\"postpic\">\r\n              <img src={item.photo} alt=\"\" />\r\n            </div>\r\n            <div className=\"details\">\r\n              <div className=\"card-header\" style={{ borderBottom: '1px solid #00000029' }}>\r\n                <div className=\"card-pic\">\r\n                  <img src={item.postedBy.photo || 'https://cdn-icons-png.flaticon.com/128/64/64572.png'} alt=\"profile\" />\r\n                  <h5>{item.postedBy.name}</h5>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"commentsection\" style={{ borderBottom: '1px solid #00000029' }}>\r\n                {item.comments.map((comment, idx) => (\r\n                  <p className=\"comm\" key={idx}>\r\n                    <span className=\"commenter\" style={{ fontWeight: 'bolder' }}>\r\n                      {comment.postedBy.name || comment.postedBy}{' '}\r\n                    </span>\r\n                    <span className=\"commenttext\">{comment.comment}</span>\r\n                  </p>\r\n                ))}\r\n              </div>\r\n\r\n              <div className=\"card-content\">\r\n                <p>{item.likes.length} likes</p>\r\n                <p>{item.body}</p>\r\n                <p\r\n                  style={{ fontWeight: 'bold', cursor: 'pointer' }}\r\n                  onClick={() => {\r\n                    toggleComment();\r\n                  }}\r\n                >\r\n                  Close comments\r\n                </p>\r\n              </div>\r\n\r\n              <div className=\"add-comment\">\r\n                <span className=\"material-symbols-outlined\">mood</span>\r\n                <input type=\"text\" placeholder=\"Add a Comment\" value={comment} onChange={(e) => setComment(e.target.value)} />\r\n                <button\r\n                  className=\"comment\"\r\n                  onClick={() => {\r\n                    makeComment(comment, item._id);\r\n                    setComment('');\r\n                  }}\r\n                >\r\n                  Post\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAO,YAAY;AACnB,SAASC,KAAK,QAAQ,gBAAgB;AACt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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}