{"ast":null,"code":"// import React, { useEffect, useState } from 'react'\n// import './Home.css';\n// import {  toast } from 'react-toastify';\n// import { useNavigate } from 'react-router-dom';\n// import { Link } from 'react-router-dom';\n// const Home = () => {\n//   var profileLink=\"https://cdn-icons-png.flaticon.com/128/64/64572.png\"\n//   const navigate = useNavigate();\n//   const [data, setData] = useState([]);\n//   const [comment, setComment] = useState(\" \")\n//   const [show,setShow] =useState(false);\n//   const [item, setItem] = useState([])\n//   const [posts, setPosts] = useState()\n//   const notifya=(msg)=>toast.error(msg)\n//   const notifyb=(msg)=>toast.success(msg)\n\n//   const toggleComment=(posts)=>{\n//     if(show){\n//       setShow(false);\n\n//     }else{\n//       setShow(true);\n//       setItem(posts)\n\n//     }\n//   }\n//   useEffect(() => {\n//     const token = localStorage.getItem(\"jwt\");\n//     if (!token) {\n//       navigate(\"/signup\")\n//     }\n\n//     //  fetching all post\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/allposts`, {\n//       headers: {\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n//       },\n\n//     }).then(res => res.json())\n//     .then((result)=>{\n//       console.log(\"API Response:\", data);\n//       console.log(result)\n//       setData(data)\n//     })\n//       .catch(err => console.log(err))\n//   }, [])\n\n//   const likepost = (id) => {\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/like/${id}`, {\n//       method: \"put\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n//       },\n//       body: JSON.stringify({\n//         postId: id\n//       })\n//     }).then(res => res.json())\n//       .then((result) => {\n//         const newdata = data.map((posts) => {\n//           if (posts._id == result._id) {\n//             return result\n//           } else {\n//             return posts\n//           }\n//         })\n//         setData(newdata)\n//         console.log(result)\n//       })\n//   }\n\n//   const unlikepost = (id) => {\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/unlike/${id}`, {\n//       method: \"put\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n//       },\n//       body: JSON.stringify({\n//         postId: id\n//       })\n//     }).then(res => res.json())\n//       .then((result) => {\n//         const newdata = data.map((posts) => {\n//           if (posts._id == result._id) {\n//             return result\n//           } else {\n//             return posts\n//           }\n//         })\n//         setData(newdata)\n//         console.log(result)\n//       })\n//   }\n\n//   const makeComment = (text, id) => {\n//     // console.log(comment)\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/comment/${id}`, {\n//       method: \"put\",\n//       headers: {\n//         \"Content-Type\": \"application/json\",\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\n//       },\n//       body: JSON.stringify({\n//         postId: id,\n//         text: text,\n//       })\n//     }).then(res => res.json())\n//       .then((result) => {\n//          const newdata = data.map((posts) => {\n//           if (posts._id == result._id) {\n//             return result\n//           } else {\n//             return posts\n//           }\n//         })\n//         setData(newdata)\n//         setComment(\" \")\n//         notifyb(\"suuccesfully commented\")\n//         console.log(result)\n//       })\n//   }\n//   return (\n//     <div className=\"home\">\n//       {data.map((posts) => {\n//         // console.log(posts)\n//         return (\n//           <div className=\"card\">\n//             <div className=\"card-header\">\n//               <div className=\"card-pic\">\n//                 <img src={posts.photo ?posts.postedBy.photo:\"profileLink\"} alt=\" \" />\n//                 <h5>\n//                   <Link to={`/profile/${posts.postedBy._id}`}>\n//                   {posts.postedBy.name}\n//                   </Link>\n//                   </h5>\n//               </div>\n//             </div>\n//             <div className=\"card-image\">\n//               <img src={posts.photo} alt=\"\" />\n//             </div>\n//             {\n//               posts.likes.includes(JSON.parse(localStorage.getItem(\"user\"))._id)\n//                 ? (\n//                   <span className=\"material-symbols-outlined material-symbols-outlined -red\" onClick={() => { unlikepost(posts._id) }}>\n//                     favorite\n//                   </span>\n//                 ) : (<span className=\"material-symbols-outlined\" onClick={() => { likepost(posts._id) }}>\n//                   favorite\n//                 </span>)\n//             }\n//             <div className=\"card-content\">\n//               <p > {item.likes.length} like</p>\n//               <p>{posts.body}</p>\n//             </div>\n\n//             <div className=\"add-comment\">\n//               <span className=\"material-symbols-outlined\">\n//                 mood\n//               </span>\n//               <input type=\"text\" placeholder='Add a Comment' value={comment} onChange={(e) => { setComment(e.target.value) }} />\n//               <button className=\"comment\" onClick={() => { makeComment(comment, posts._id) }}>Post</button>\n//             </div>\n//           </div>\n//         )\n// })}\n\n//       {show && (\n//         <div className=\"showcomment\">\n//         <div className=\"container\">\n//           <div className=\"postpic\">\n//             <img src=\"\" alt=\"\" />\n//           </div>\n//           <div className=\"details\">\n\n//             {/* card-header */}\n//             <div className=\"card-header\" style={{ borderBottom: \"1px solid #00000029\" }}>\n//               <div className=\"card-pic\">\n//                 <img src={item.photo} alt=\" \" />\n//                 <h5>{item.postedBy.name}</h5>\n//               </div>\n//             </div>\n\n//             {/* comment-section */}\n//             <div className=\"commentsection\" style={{ borderBottom: \"1px solid #00000029\" }} >\n//               {\n//                 item.comments.map((comment)=>{\n//                 return  (<p className='comm'>\n//                 <span className=\"commenter\" style={{ fontWeight: \"bolder\" }} >{comment.postedBy}{\" \"}  </span>\n//                 <span className=\"commenttext\">{comment.comment}</span>\n//               </p>)\n//                 })\n//               }\n\n//             </div>\n\n//             {/* card content */}\n//             <div className=\"card-content\">\n//               <p >{posts.likes.length} likes</p>\n//               <p>{posts.body}</p>\n//               <p style={{fontWeight:\"bold\",cyrsor:\"pointer\"}}\n//               onClick={()=>{\n//                 toggleComment(posts);\n//               }}>\n//                 View all comments\n//               </p>\n//             </div>\n//             <div className=\"add-comment\">\n//               <span className=\"material-symbols-outlined\">\n//                 mood\n//               </span>\n//               <input type=\"text\" placeholder='Add a Comment' value={comment} onChange={(e) => { setComment(e.target.value) }} />\n//               <button className=\"comment\"\n//                onClick={()=>{makeComment(comment,item._id)\n//                 toggleComment();\n//                }}\n//               >Post</button>\n//             </div>\n//           </div>\n//         </div>\n//         <div className=\"closecomment\" onClick={()=>{toggleComment(posts)}}>\n//           <span className=\"material-symbols-outlined material-symbols-outlined-comment\">\n//             close\n//           </span>\n//         </div>\n//       </div>\n//       )}\n//     </div>\n//   )\n// }\n\n// export default Home","map":{"version":3,"names":[],"sources":["D:/fullstack_instagram/insta_clone/backend/frontend/src/components/Home.js"],"sourcesContent":["// import React, { useEffect, useState } from 'react'\r\n// import './Home.css';\r\n// import {  toast } from 'react-toastify';\r\n// import { useNavigate } from 'react-router-dom';\r\n// import { Link } from 'react-router-dom';\r\n// const Home = () => {\r\n//   var profileLink=\"https://cdn-icons-png.flaticon.com/128/64/64572.png\"\r\n//   const navigate = useNavigate();\r\n//   const [data, setData] = useState([]);\r\n//   const [comment, setComment] = useState(\" \")\r\n//   const [show,setShow] =useState(false);\r\n//   const [item, setItem] = useState([])\r\n//   const [posts, setPosts] = useState()\r\n//   const notifya=(msg)=>toast.error(msg)\r\n//   const notifyb=(msg)=>toast.success(msg)\r\n\r\n\r\n//   const toggleComment=(posts)=>{\r\n//     if(show){\r\n//       setShow(false);\r\n     \r\n//     }else{\r\n//       setShow(true);\r\n//       setItem(posts)\r\n     \r\n//     }\r\n//   }\r\n//   useEffect(() => {\r\n//     const token = localStorage.getItem(\"jwt\");\r\n//     if (!token) {\r\n//       navigate(\"/signup\")\r\n//     }\r\n  \r\n//     //  fetching all post\r\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/allposts`, {\r\n//       headers: {\r\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n//       },\r\n\r\n//     }).then(res => res.json())\r\n//     .then((result)=>{\r\n//       console.log(\"API Response:\", data);\r\n//       console.log(result)\r\n//       setData(data)\r\n//     })\r\n//       .catch(err => console.log(err))\r\n//   }, [])\r\n\r\n//   const likepost = (id) => {\r\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/like/${id}`, {\r\n//       method: \"put\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n//       },\r\n//       body: JSON.stringify({\r\n//         postId: id\r\n//       })\r\n//     }).then(res => res.json())\r\n//       .then((result) => {\r\n//         const newdata = data.map((posts) => {\r\n//           if (posts._id == result._id) {\r\n//             return result\r\n//           } else {\r\n//             return posts\r\n//           }\r\n//         })\r\n//         setData(newdata)\r\n//         console.log(result)\r\n//       })\r\n//   }\r\n\r\n//   const unlikepost = (id) => {\r\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/unlike/${id}`, {\r\n//       method: \"put\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n//       },\r\n//       body: JSON.stringify({\r\n//         postId: id\r\n//       })\r\n//     }).then(res => res.json())\r\n//       .then((result) => {\r\n//         const newdata = data.map((posts) => {\r\n//           if (posts._id == result._id) {\r\n//             return result\r\n//           } else {\r\n//             return posts\r\n//           }\r\n//         })\r\n//         setData(newdata)\r\n//         console.log(result)\r\n//       })\r\n//   }\r\n\r\n//   const makeComment = (text, id) => {\r\n//     // console.log(comment)\r\n//     fetch(`${process.env.REACT_APP_API_URL}/posts/comment/${id}`, {\r\n//       method: \"put\",\r\n//       headers: {\r\n//         \"Content-Type\": \"application/json\",\r\n//         \"Authorization\": \"Bearer \" + localStorage.getItem(\"jwt\")\r\n//       },\r\n//       body: JSON.stringify({\r\n//         postId: id,\r\n//         text: text,\r\n//       })\r\n//     }).then(res => res.json())\r\n//       .then((result) => {\r\n//          const newdata = data.map((posts) => {\r\n//           if (posts._id == result._id) {\r\n//             return result\r\n//           } else {\r\n//             return posts\r\n//           }\r\n//         })\r\n//         setData(newdata)\r\n//         setComment(\" \")\r\n//         notifyb(\"suuccesfully commented\")\r\n//         console.log(result)\r\n//       })\r\n//   }\r\n//   return (\r\n//     <div className=\"home\">\r\n//       {data.map((posts) => {\r\n//         // console.log(posts)\r\n//         return (\r\n//           <div className=\"card\">\r\n//             <div className=\"card-header\">\r\n//               <div className=\"card-pic\">\r\n//                 <img src={posts.photo ?posts.postedBy.photo:\"profileLink\"} alt=\" \" />\r\n//                 <h5>\r\n//                   <Link to={`/profile/${posts.postedBy._id}`}>\r\n//                   {posts.postedBy.name}\r\n//                   </Link>\r\n//                   </h5>\r\n//               </div>\r\n//             </div>\r\n//             <div className=\"card-image\">\r\n//               <img src={posts.photo} alt=\"\" />\r\n//             </div>\r\n//             {\r\n//               posts.likes.includes(JSON.parse(localStorage.getItem(\"user\"))._id)\r\n//                 ? (\r\n//                   <span className=\"material-symbols-outlined material-symbols-outlined -red\" onClick={() => { unlikepost(posts._id) }}>\r\n//                     favorite\r\n//                   </span>\r\n//                 ) : (<span className=\"material-symbols-outlined\" onClick={() => { likepost(posts._id) }}>\r\n//                   favorite\r\n//                 </span>)\r\n//             }\r\n//             <div className=\"card-content\">\r\n//               <p > {item.likes.length} like</p>\r\n//               <p>{posts.body}</p>\r\n//             </div>\r\n\r\n//             <div className=\"add-comment\">\r\n//               <span className=\"material-symbols-outlined\">\r\n//                 mood\r\n//               </span>\r\n//               <input type=\"text\" placeholder='Add a Comment' value={comment} onChange={(e) => { setComment(e.target.value) }} />\r\n//               <button className=\"comment\" onClick={() => { makeComment(comment, posts._id) }}>Post</button>\r\n//             </div>\r\n//           </div>\r\n//         )\r\n// })}\r\n\r\n//       {show && (\r\n//         <div className=\"showcomment\">\r\n//         <div className=\"container\">\r\n//           <div className=\"postpic\">\r\n//             <img src=\"\" alt=\"\" />\r\n//           </div>\r\n//           <div className=\"details\">\r\n\r\n//             {/* card-header */}\r\n//             <div className=\"card-header\" style={{ borderBottom: \"1px solid #00000029\" }}>\r\n//               <div className=\"card-pic\">\r\n//                 <img src={item.photo} alt=\" \" />\r\n//                 <h5>{item.postedBy.name}</h5>\r\n//               </div>\r\n//             </div>\r\n\r\n//             {/* comment-section */}\r\n//             <div className=\"commentsection\" style={{ borderBottom: \"1px solid #00000029\" }} >\r\n//               {\r\n//                 item.comments.map((comment)=>{\r\n//                 return  (<p className='comm'>\r\n//                 <span className=\"commenter\" style={{ fontWeight: \"bolder\" }} >{comment.postedBy}{\" \"}  </span>\r\n//                 <span className=\"commenttext\">{comment.comment}</span>\r\n//               </p>)\r\n//                 })\r\n//               }\r\n              \r\n//             </div>\r\n\r\n//             {/* card content */}\r\n//             <div className=\"card-content\">\r\n//               <p >{posts.likes.length} likes</p>\r\n//               <p>{posts.body}</p>\r\n//               <p style={{fontWeight:\"bold\",cyrsor:\"pointer\"}}\r\n//               onClick={()=>{\r\n//                 toggleComment(posts);\r\n//               }}>\r\n//                 View all comments\r\n//               </p>\r\n//             </div>\r\n//             <div className=\"add-comment\">\r\n//               <span className=\"material-symbols-outlined\">\r\n//                 mood\r\n//               </span>\r\n//               <input type=\"text\" placeholder='Add a Comment' value={comment} onChange={(e) => { setComment(e.target.value) }} />\r\n//               <button className=\"comment\"\r\n//                onClick={()=>{makeComment(comment,item._id)\r\n//                 toggleComment();\r\n//                }}\r\n//               >Post</button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//         <div className=\"closecomment\" onClick={()=>{toggleComment(posts)}}>\r\n//           <span className=\"material-symbols-outlined material-symbols-outlined-comment\">\r\n//             close\r\n//           </span>\r\n//         </div>\r\n//       </div>\r\n//       )}\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n\r\n// export default Home\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}