{"ast":null,"code":"// import React ,{useState,useContext} from 'react'\n// import logo from '../img/logo.png'\n// import './Signin.css'\n// import {  toast } from 'react-toastify';\n// import { Link ,useNavigate} from 'react-router-dom'\n// import { LoginContext } from '../context/LoginContext';\n// console.log(\"From .env:\", process.env.REACT_APP_API_URL);\n// const    Signin = () => {\n//     const {setUserlogin}=useContext(LoginContext)\n//     const navigate=useNavigate();\n//     const [email, setEmail] = useState(\"\")\n//     const [password, setPassword] = useState(\"\")\n//     const notifya=(msg)=>toast.error(msg)\n//     const notifyb=(msg)=>toast.success(msg)\n//     const emailregex=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\n//     const postdata = ()=>{\n//         if(!emailregex.test(email)){\n//             notifya(\"invalid email\")\n//             return\n//         }\n//         console.log(\"API URL:\", process.env.REACT_APP_API_URL);\n//         fetch(`${process.env.REACT_APP_API_URL}/auth/signin`,{\n//            method:\"POST\",\n//            headers:{\n//             \"Content-Type\":\"application/json\"\n//            },\n//            body:JSON.stringify({ \n//             email:email,\n//             password:password\n//            }),\n//         }).then(res=>res.json())\n//         .then(data=>{\n//             if(data.error){\n//             notifya(data.error)\n//             }else{\n//                 notifyb(\"Signed in successfully\")\n//                 console.log(data)\n//                 localStorage.setItem(\"jwt\",data.token)\n//                 localStorage.setItem(\"user\",JSON.stringify(data.user))\n//                 setUserlogin(true)\n//                 navigate('/')\n//             }\n//             console.log(data)\n//         }).catch(err=>{\n//             notifya(\"something went wrong\")\n//             console.error(err)\n//         })\n//         } \n//   return (\n//     <div className=\"signin\">\n//         <div>\n//             <div className=\"loginform\">\n//                 <img className=\"signuplogo\" src={logo} alt=\"\" />\n//             <div>\n//                 <input type=\"email\" name=\"email\" id=\"email\" value={email} placeholder='Email' onChange={(e)=>{setEmail(e.target.value)}}/>\n//             </div>\n//             <div>\n//                 <input type=\"password\" name=\"password\" id=\"password\" value={password} placeholder='Password' onChange={(e)=>{setPassword(e.target.value)}}/>\n//             </div>\n//             <input type=\"submit\" id=\"login-btn\" onClick={()=>{postdata()}} value=\"Sign In\" />\n//             </div>\n//             <div className=\"loginform2\">\n//                 Don't have an account ?\n//                 <Link to =\"/signup\">\n//                 <span style={{color:\"blue\",cursor:\"pointer\"}}>Sign Up</span>\n//                 </Link>\n//             </div>\n//         </div>\n//     </div>\n//   )\n// }\n// export default Signin\nimport React,{useState,useContext}from'react';import logo from'../img/logo.png';import'./Signin.css';import{toast}from'react-toastify';import{Link,useNavigate}from'react-router-dom';import{LoginContext}from'../context/LoginContext';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Signin=()=>{const{setUserlogin}=useContext(LoginContext);const navigate=useNavigate();const[email,setEmail]=useState('');const[password,setPassword]=useState('');const notifya=msg=>toast.error(msg);const notifyb=msg=>toast.success(msg);const emailregex=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;const postdata=async()=>{if(!emailregex.test(email)){notifya('Invalid email');return;}try{const res=await fetch(\"\".concat(process.env.REACT_APP_API_URL,\"/auth/signin\"),{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({email,password})});if(!res.ok){const errorData=await res.json();notifya(errorData.error||'Login failed');return;}const data=await res.json();notifyb('Signed in successfully');// Save token and user in localStorage\nlocalStorage.setItem('jwt',data.token);localStorage.setItem('user',JSON.stringify(data.user));setUserlogin(true);navigate('/');}catch(err){console.error(err);notifya('Something went wrong');}};return/*#__PURE__*/_jsx(\"div\",{className:\"signin\",children:/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"loginform\",children:[/*#__PURE__*/_jsx(\"img\",{className:\"signuplogo\",src:logo,alt:\"logo\"}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"email\",name:\"email\",placeholder:\"Email\",value:email,onChange:e=>setEmail(e.target.value)})}),/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",placeholder:\"Password\",value:password,onChange:e=>setPassword(e.target.value)})}),/*#__PURE__*/_jsx(\"input\",{type:\"submit\",id:\"login-btn\",onClick:postdata,value:\"Sign In\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"loginform2\",children:[\"Don't have an account?\",' ',/*#__PURE__*/_jsx(Link,{to:\"/signup\",children:/*#__PURE__*/_jsx(\"span\",{style:{color:'blue',cursor:'pointer'},children:\"Sign Up\"})})]})]})});};export default Signin;","map":{"version":3,"names":["React","useState","useContext","logo","toast","Link","useNavigate","LoginContext","jsx","_jsx","jsxs","_jsxs","Signin","setUserlogin","navigate","email","setEmail","password","setPassword","notifya","msg","error","notifyb","success","emailregex","postdata","test","res","fetch","concat","process","env","REACT_APP_API_URL","method","headers","body","JSON","stringify","ok","errorData","json","data","localStorage","setItem","token","user","err","console","className","children","src","alt","type","name","placeholder","value","onChange","e","target","id","onClick","to","style","color","cursor"],"sources":["D:/fullstack_instagram/insta_clone/backend/frontend/src/components/Signin.js"],"sourcesContent":["// import React ,{useState,useContext} from 'react'\r\n// import logo from '../img/logo.png'\r\n// import './Signin.css'\r\n// import {  toast } from 'react-toastify';\r\n// import { Link ,useNavigate} from 'react-router-dom'\r\n// import { LoginContext } from '../context/LoginContext';\r\n\r\n\r\n// console.log(\"From .env:\", process.env.REACT_APP_API_URL);\r\n// const    Signin = () => {\r\n//     const {setUserlogin}=useContext(LoginContext)\r\n//     const navigate=useNavigate();\r\n//     const [email, setEmail] = useState(\"\")\r\n//     const [password, setPassword] = useState(\"\")\r\n//     const notifya=(msg)=>toast.error(msg)\r\n//     const notifyb=(msg)=>toast.success(msg)\r\n//     const emailregex=/^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/\r\n//     const postdata = ()=>{\r\n//         if(!emailregex.test(email)){\r\n//             notifya(\"invalid email\")\r\n//             return\r\n            \r\n//         }\r\n//         console.log(\"API URL:\", process.env.REACT_APP_API_URL);\r\n\r\n//         fetch(`${process.env.REACT_APP_API_URL}/auth/signin`,{\r\n//            method:\"POST\",\r\n//            headers:{\r\n//             \"Content-Type\":\"application/json\"\r\n//            },\r\n//            body:JSON.stringify({ \r\n//             email:email,\r\n//             password:password\r\n//            }),\r\n//         }).then(res=>res.json())\r\n//         .then(data=>{\r\n//             if(data.error){\r\n//             notifya(data.error)\r\n//             }else{\r\n//                 notifyb(\"Signed in successfully\")\r\n//                 console.log(data)\r\n//                 localStorage.setItem(\"jwt\",data.token)\r\n//                 localStorage.setItem(\"user\",JSON.stringify(data.user))\r\n//                 setUserlogin(true)\r\n//                 navigate('/')\r\n//             }\r\n//             console.log(data)\r\n//         }).catch(err=>{\r\n//             notifya(\"something went wrong\")\r\n//             console.error(err)\r\n//         })\r\n//         } \r\n//   return (\r\n//     <div className=\"signin\">\r\n//         <div>\r\n//             <div className=\"loginform\">\r\n//                 <img className=\"signuplogo\" src={logo} alt=\"\" />\r\n            \r\n//             <div>\r\n//                 <input type=\"email\" name=\"email\" id=\"email\" value={email} placeholder='Email' onChange={(e)=>{setEmail(e.target.value)}}/>\r\n//             </div>\r\n//             <div>\r\n//                 <input type=\"password\" name=\"password\" id=\"password\" value={password} placeholder='Password' onChange={(e)=>{setPassword(e.target.value)}}/>\r\n//             </div>\r\n//             <input type=\"submit\" id=\"login-btn\" onClick={()=>{postdata()}} value=\"Sign In\" />\r\n//             </div>\r\n//             <div className=\"loginform2\">\r\n//                 Don't have an account ?\r\n//                 <Link to =\"/signup\">\r\n//                 <span style={{color:\"blue\",cursor:\"pointer\"}}>Sign Up</span>\r\n//                 </Link>\r\n//             </div>\r\n//         </div>\r\n//     </div>\r\n//   )\r\n// }\r\n\r\n// export default Signin\r\n\r\n\r\n\r\nimport React, { useState, useContext } from 'react';\r\nimport logo from '../img/logo.png';\r\nimport './Signin.css';\r\nimport { toast } from 'react-toastify';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport { LoginContext } from '../context/LoginContext';\r\n\r\nconst Signin = () => {\r\n  const { setUserlogin } = useContext(LoginContext);\r\n  const navigate = useNavigate();\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const notifya = (msg) => toast.error(msg);\r\n  const notifyb = (msg) => toast.success(msg);\r\n\r\n  const emailregex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\r\n\r\n  const postdata = async () => {\r\n    if (!emailregex.test(email)) {\r\n      notifya('Invalid email');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const res = await fetch(`${process.env.REACT_APP_API_URL}/auth/signin`, {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ email, password }),\r\n      });\r\n\r\n      if (!res.ok) {\r\n        const errorData = await res.json();\r\n        notifya(errorData.error || 'Login failed');\r\n        return;\r\n      }\r\n\r\n      const data = await res.json();\r\n      notifyb('Signed in successfully');\r\n\r\n      // Save token and user in localStorage\r\n      localStorage.setItem('jwt', data.token);\r\n      localStorage.setItem('user', JSON.stringify(data.user));\r\n\r\n      setUserlogin(true);\r\n      navigate('/');\r\n    } catch (err) {\r\n      console.error(err);\r\n      notifya('Something went wrong');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signin\">\r\n      <div>\r\n        <div className=\"loginform\">\r\n          <img className=\"signuplogo\" src={logo} alt=\"logo\" />\r\n          <div>\r\n            <input\r\n              type=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              value={email}\r\n              onChange={(e) => setEmail(e.target.value)}\r\n            />\r\n          </div>\r\n          <div>\r\n            <input\r\n              type=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            />\r\n          </div>\r\n          <input type=\"submit\" id=\"login-btn\" onClick={postdata} value=\"Sign In\" />\r\n        </div>\r\n\r\n        <div className=\"loginform2\">\r\n          Don't have an account?{' '}\r\n          <Link to=\"/signup\">\r\n            <span style={{ color: 'blue', cursor: 'pointer' }}>Sign Up</span>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}